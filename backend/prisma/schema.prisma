datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Status {
	ONLINE
	OFFLINE
	INGAME
}

model User {
  id          Int     @default(autoincrement()) @id
  email       String? @unique
  username    String  @unique
  password	  String
  avatar      String?
  oAuth_code  String? @unique
  oAuth_exp   DateTime?
  userStatus  Status  @default(OFFLINE) // online | in-game | away ...
  player1Games Game[] @relation("Player1")
  player2Games Game[] @relation("Player2")
  stats		  Stats?
  createdAt   DateTime @default(now())

  @@map("users")
}

model Stats {
	User	User @relation(fields: [userId], references: [id])
	userId 	Int
	matchesPlayed Int @default(0)
	wins	Int @default(0)
	losses	Int @default(0)
	rank 	String @default("Iron") // Bronze, Silver, Gold, Emerald, Diamond, Master, Challenger
	createdAt DateTime @default(now())
	updatedAt DateTime @updatedAt

	@@id([userId])
}

enum GameStatus {
	MATCHMAKING
	INVITE
	ONGOING
	FINISHED
}

enum GameType {
	CLASSIC
	MEDIUM
	HARDCORE
}

model Game {
	id		Int @id @default(autoincrement())

	player1	User? @relation("Player1", fields: [player1Id], references: [id])
	player1Id Int?
	player1Score Int @default(0)

	player2	User? @relation("Player2", fields: [player2Id], references: [id])
	player2Id Int?
	player2Score Int @default(0)

	winner Int?

	status GameStatus
	gameType GameType @default(CLASSIC)

	createdAt DateTime @default(now())

}